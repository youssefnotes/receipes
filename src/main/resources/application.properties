#spring.datasource.url=jdbc:postgresql://postgres.postgres.svc.cluster.local:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=password


# This will create table automatically in your database
#spring.jpa.hibernate.ddl-auto=create
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5455/postgresDB
spring.datasource.username=postgresUser
spring.datasource.password=postgresPW
spring.jpa.hibernate.ddl-auto=create-drop


#spring.datasource.url=jdbc:h2:mem:test;
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=pass
## We add the MySQL Dialect so that it understands and generates the query based on MySQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#spring.h2.console.enabled=true
#spring.jpa.defer-datasource-initialization=true


#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

#spring.sql.init.mode=always

#
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.time-zone=GMT
#
## This will create table automatically in your database
#spring.jpa.hibernate.ddl-auto=create
##spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

